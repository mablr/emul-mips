ADDI $8,$0,5 # $8 <- 5
ADDI $9,$0,7 # $9 <- 7
ADDI $10,$0,2 # $10 <- 2
AND $11,$8,$9 # $11 <- 5&7 = 5
DIV $9,$10 # HI <- 1 ; LO <- 3
MFHI $12 # $12 <- 1
MFLO $13 # $13 <- 3
SW $12,0($0) 
SW $13,1($0)
SW $8,-3($8) # <=> 2($0)
OR $8,$10,$12 # $8 <- 2|1 = 3
LW $9,1($0) # $9 <- 3
LUI $14, 1 # $10 <- 1<<16
SUB $14, $14, $9 # $14 <- 65536 - 3

# *** Final register states: ***
# ...      
# $08: 3         $09: 3         $10: 2         $11: 5         
# $12: 1         $13: 3         $14: 65533     $15: 0 
# ...
# *** Final memory state: ***
# @00000000 1         @00000004 3         @00000008 5         @00000012 0
# ...